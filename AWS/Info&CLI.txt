# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                             Install AWS CLI
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
python3 --version
sudo apt-get install awscli         - Install for Linux, need a python
aws --version

python -V
pip install awscli                  - Install for Windows, need a python
aws --version

aws configure                       - Connect to AWS console via CLI, will create a folder ./aws in ~
AWS Access key ID
AWS Secret Access Key
Default region name
Default output format
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                       S3 - Simple Storage Service
# http://zhuk.testlab.s3-website.eu-central-1.amazonaws.com/
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 99.99% availability
# 99.999999999 durability
# Max file size - 5TB via Multipart Upload
# Max file size per one PUT - 5GB
# Number of default buckets per account - 100

# *** Service types ***
# 1. Amazon S3 Standard
# 2. Amazon S3 Standard - Infrequent Access
# 3. Reduced Redundancy Storage
# 4. Amazon Glacier                   - Access to data on request during 3-5h
 _______________________________________________________________________________
|                     |               |     Standard -    |        Reduced      |
|                     |    Standard   | Infrequent Access |  Redundancy Storage |
|_____________________|_______________|___________________|_____________________|
|       Durability    | 99.999999999% |    99.999999999%  |       99.99%        |
|_____________________|_______________|___________________|_____________________|
| Concurrent facility |               |                   |                     |
|   fault tolerance   |       2       |          2        |          1          |
|_____________________|_______________|___________________|_____________________|
|     SSL support     |      Yes      |         Yes       |          Yes        |
|_____________________|_______________|___________________|_____________________|
| First byte latency  | Milliseconds  |     Milliseconds  |     Milliseconds    |
|_____________________|_______________|___________________|_____________________|
|      Lifecycle      |               |                   |                     |
| Management Policies |      Yes      |         Yes       |          Yes        |
|_____________________|_______________|___________________|_____________________|

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                   Example to configure multi-account in CLI
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# in ./aws/config
[default]
region = eu-west-3
output = text

[profile reader]
region = eu-central-1
output = json

[profile writer]
region = eu-central-1
output = table

# in ./aws/credentials
[default]
aws_access_key_id =
aws_secret_access_key =

[reader]
aws_access_key_id =
aws_secret_access_key =

[writer]
aws_access_key_id =
aws_secret_access_key =

aws s3 mb s3://name.name --profile=writer     - Create bucket with default settings in profile
aws s3 ls --profile=reader                    - Show list of buckets
aws s3 cp "D:\TMP\name" s3://name.name        - Copy file or directory
aws s3 sync . s3://name.name                  - Synchronization the current directory with bucket

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                       EC2 - Elastic Compute Cloud
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# *** Kinds of Instances ***

# 1. On Demand                                    - hourly payment
# 2. Reserved (1-3 year)                          - Price reduced by 70% when paid in full
# 3. Scheduled Reserved (daily, weekly, monthly)  - Available in regions US
# 4. Dedicated Hosts                              - Physical host binding, used in licensing

# *** Types of Instances ***

# 1. T   - General Purpose            ~ CPU 2.5Hz
# 2. M   - General Purpose
# 3. C   - Compute Optimized
# 4. F   - FPGA Optimized
# 5. G,P - GPU Optimized
# 6. X,R - RAM Memory Optimized
# 7. D,I - Storage Optimized

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      EBS - Elastic Block Store
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# *** Types of Disks ***

# Min = 1GB, Max = 16TB

# Root-Boot:
# 1. General Purpose SSD (GP2)        - For (gp2) volumes, baseline performance scales linearly at 3 IOPS per GiB
                                      from a minimum of 100 IOPS (at 33.33 GiB and below)
                                      to a maximum of 16,000 IOPS (at 5,334 GiB and above).
# 2. General Purpose SSD (GP3)        - (gp3) volumes support a baseline of 3,000 IOPS. Additionally, you can
                                      provision up to 500 IOPS per GiB up to a maximum of 16,000 IOPS.
#         (io1 and io2) volumes support between 100 and 64,000 IOPS depending on the volume size.
# 3. Provisioned IOPS SSD (IO1)       - provision up to 50 IOPS per GiB
# 4. Provisioned IOPS SSD (IO2)       - provision up to 500 IOPS per GiB
# 5. Magnetic                         - deliver approximately 100 IOPS on average

# Other:
# 6. Cold HDD (SC1)                   - performance is measured in throughput (MiB/s)
# 7. Throughput Optimized HDD (ST1)   - performance is measured in throughput (MiB/s)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Данные о Сервере EC2 - http://169.254.169.254/latest/meta-data/
a= `curl http://169.254.169.254/latest/meta-data/.... `
echo $a

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                       ELB - Elastic Load Balancer
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Elastic Load Balancing automatically distributes your incoming traffic across multiple targets,
# such as EC2 instances, containers, and IP addresses, in one or more Availability Zones.
# It monitors the health of its registered targets, and routes traffic only to the healthy targets.
# Elastic Load Balancing scales your load balancer capacity automatically in response to changes
# in incoming traffic

# 1. Application Load Balancers
# 2. Network Load Balancers
# 3. Gateway Load Balancers
# 4. Classic Load Balancers

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#      Auto Scaling Group
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Vertical scaling - t2.micro -> t2.medium -> t2.large
# Horizontal scaling used in Auto scaling, add clone of instance
# Scale out - increase
# Scale in - reduce

              ----> Launch Configuration : describes what instance to start
Auto Scaling |
              ----> Auto Scaling Group : describes how many to start and when to add and remove

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#                       VPC - Virtual Private Cloud
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# VPC can be created for one region and for all availability zones
# Max CIDR block - /16 -5 ip reserved by AWS      Min CIDR block - /28 -5 ip reserved by AWS

# Public subnet - all instances have public ip, direct access to the Internet
# Private subnet - all instances don`t have public ip, access to the Internet via NAT
# Database subnet - doesn`t have access to the internet

# VPC Flow logs can be enabled on:
          * VPC
          * Subnet
          * Interface
#  Needs IAM Role with access to Cloud Watch

# VPC Peering used to connect multiple VPS in one region. Can be used for different AWS accounts
